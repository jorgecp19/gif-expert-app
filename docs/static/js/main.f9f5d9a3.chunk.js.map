{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","currentCategories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","responseBody","gifs","data","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+KAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACE,uBAAMC,SATa,SAACC,GACpBA,EAAMC,iBACFJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAiB,OAAKP,GAAL,mBAAoBO,OACnDN,EAAc,MAKhB,UACE,8CACA,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACnBF,EAAcE,EAAMQ,OAAOF,UAkBzB,6C,+BCzBOG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DACN,mCACC,+BAEVC,EAJe,UAEL,+BAFK,2BACN,mCADM,cAIgCC,UAAUH,GAJ1C,sBAMEI,MAAMF,GANR,cAMfG,EANe,gBAOMA,EAASC,OAPf,cAOfC,EAPe,OASfC,EAAOD,EAAaE,KAAKC,KAAI,SAACC,GAAS,IAAD,EAC1C,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXX,IAAG,UAAES,EAAIG,cAAN,aAAE,EAAYC,iBAAiBb,QAbjB,kBAiBdM,GAjBc,4CAAH,sDCGPQ,G,KAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOX,EAAS,EAATA,IAClC,OACE,sBAAKe,UAAU,2CAAf,UACE,qBAAKC,IAAKhB,EAAKiB,IAAKN,IACpB,4BAAIA,SCHGO,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCuB,KAAM,GACNY,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OATAC,qBAAU,WACRzB,EAAQC,GACLyB,MAAK,SAAAjB,GAAI,OAAIe,EAAS,CACrBd,KAAMD,EACNa,SAAS,SAEZ,CAACrB,IAGGsB,EDfwBI,CAAa1B,GAAhCc,EADyB,EAC9BL,KAAaY,EADiB,EACjBA,QAEpB,OACE,qCACE,6BAAKrB,IACJqB,EAAU,cACT,qBAAKJ,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAACiB,GAAD,OACT,cAAC,EAAD,eAEMA,GADCA,EAAMf,aESZgB,EApBM,WAAO,IAAD,EACW1C,mBAAS,CAAC,eADrB,mBAClB2C,EADkB,KACN5C,EADM,KAGzB,OACE,qCACE,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACG4C,EAAWnB,KAAI,SAACV,GAAD,OACd,cAAC,EAAD,CAEEA,SAAUA,GADLA,YCVjB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.f9f5d9a3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n  const [inputValue, setInputValue] = useState('')\n\n  const handleInput = (event) => {\n    setInputValue(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories(currentCategories => [inputValue, ...currentCategories])\n      setInputValue('')\n    }\n  }\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Add Category</h2>\n      <input \n        type=\"text\"\n        value={inputValue}\n        onChange={handleInput} />\n      <button>Add</button>\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}","export const getGifs = async (category) => {\n  const apiKey = 'mlH3MaWG05V2n8uiWlq2Kks7bUcij1zP';\n  const baseUrl = 'http://api.giphy.com/v1/gifs';\n\n  const url = `${baseUrl}/search?api_key=${apiKey}&q=${encodeURI(category)}&limit=10`\n  \n  const response = await fetch(url);\n  const responseBody = await response.json();\n  \n  const gifs = responseBody.data.map((gif) => {\n    return {\n      id: gif.id,\n      title: gif.title,\n      url: gif.images?.downsized_medium.url,\n    }\n  });\n\n  return gifs;\n}","import React from 'react';\nimport '../index.css'\n\nexport const GifGridItem = ({title, url}) => {\n  return (\n    <div className=\"card animate__animated animate__fadeInUp\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n  const {data:images, loading} = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading ? 'Cargando...' : \n        <div className=\"card-grid\">\n          {\n            images.map((image) => \n              <GifGridItem \n                key={image.id} \n                {...image} \n              />\n            )\n          }\n        </div>\n      }\n    </>\n  )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n  \n  // anytime there is a change in some variables in the deps list, \n  // the effect function is triggered\n  useEffect(() => {\n    getGifs(category)\n      .then(gifs => setState({\n        data: gifs,\n        loading: false\n      }));\n  }, [category]);\n\n\n  return state;\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['TS madison']);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <hr />\n      <AddCategory setCategories={setCategories} />\n      <ol>\n        {categories.map((category) => \n          <GifGrid \n            key={category}\n            category={category} /> \n        )}\n      </ol>\n    </>\n  );\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}